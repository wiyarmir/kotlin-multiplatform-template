import java.nio.file.Paths

apply plugin: "kotlin"
apply plugin: "kotlinx-serialization"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"

mainClassName = "io.ktor.server.netty.EngineMain"

sourceCompatibility = 1.8

compileKotlin.kotlinOptions.jvmTarget = '1.8'
compileTestKotlin.kotlinOptions.jvmTarget = '1.8'

dependencies {
    implementation project(":common")

    implementation Libs.kotlinStdlib
    implementation Libs.kotlinReflect

    implementation Libs.kotlinxSerializationCore

    implementation Libs.okhttp

    implementation Libs.ktorLocations
    implementation Libs.ktorFreemaker
    implementation Libs.ktorHtmlBuilder
    implementation Libs.ktorServerNetty
    implementation Libs.ktorSerialization

    implementation Libs.logbackClassic
    implementation Libs.fuel

    testImplementation Libs.kotlinxCoroutinesTest
    testImplementation Libs.kotlinTestJunit
    testImplementation Libs.ktorServerTestHost
    testImplementation Libs.mockitoKotlin
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = ['-Xuse-experimental=kotlin.Experimental']
}

shadowJar {
    archiveClassifier.set('release')
    from({ Paths.get(project(':web').buildDir.path, 'distributions') })
}

tasks['shadowJar'].mustRunAfter clean
tasks['processResources'].mustRunAfter ':web:build'

task release() {
    dependsOn('clean')
    dependsOn(':web:build')
    dependsOn('shadowJar')
}
